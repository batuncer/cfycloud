name: 'Terraform CI/CD for Employee App'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write   # Required for OIDC
  contents: read    # Required to checkout the code
  pull-requests: write # Optional: for writing plan output to PR comments

jobs:
  terraform:
    name: 'Terraform Operations'
    runs-on: ubuntu-latest
    env:
      TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
      TF_VAR_docker_password: ${{ secrets.TF_VAR_DOCKER_PASSWORD }}
      TF_VAR_allowed_ssh_ip: ${{ secrets.TF_VAR_ALLOWED_SSH_IP }} # Ensure this secret exists or provide a default

      AWS_REGION: ${{ vars.AWS_REGION || 'eu-west-1' }}
      TF_VAR_docker_username: ${{ vars.TF_VAR_DOCKER_USERNAME || 'bakituncer' }}
      TF_VAR_key_name: ${{ vars.TF_VAR_KEY_NAME || 'cfy' }}
      TF_VAR_vpc_cidr: ${{ vars.TF_VAR_VPC_CIDR || '10.0.0.0/16' }}
      TF_VAR_public_subnet_cidr: ${{ vars.TF_VAR_PUBLIC_SUBNET_CIDR || '10.0.1.0/24' }}
      TF_VAR_private_subnet_cidrs: ${{ vars.TF_VAR_PRIVATE_SUBNET_CIDRS || '["10.0.2.0/24","10.0.3.0/24"]' }}
      TF_VAR_db_name: ${{ vars.TF_VAR_DB_NAME || 'employee' }}
      TF_VAR_db_user: ${{ vars.TF_VAR_DB_USER || 'baki' }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.6.0'

      # Step 1: Try to configure AWS Credentials using OIDC (Recommended)
      - name: 'Configure AWS Credentials (OIDC)'
        if: ${{ secrets.AWS_ACCESS_KEY_ID }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_TO_ASSUME }} # Use a secret for the role ARN
          aws-region: ${{ env.AWS_REGION }}

      # Step 2: Fallback to Access Keys if OIDC is not configured or access keys are explicitly provided
      - name: 'Configure AWS Credentials (using Access Keys)'
        # This step will run if AWS_ACCESS_KEY_ID secret is NOT EMPTY and set.
        # ðŸ‘‡ CORRECTED IF CONDITION ðŸ‘‡
        if: ${{ secrets.AWS_ACCESS_KEY_ID }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Terraform Init'
        id: init
        run: terraform init -input=false

      - name: 'Terraform Validate'
        id: validate
        run: terraform validate -no-color

      - name: 'Terraform Plan'
        id: plan
        run: terraform plan -input=false -no-color -out=tfplan

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan
          if-no-files-found: error

      - name: 'Terraform Apply (Only on push to main branch)'
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -input=false -auto-approve tfplan