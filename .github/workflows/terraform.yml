name: Terraform CI/CD

on:

  push:
    branches:
      - main

  pull_request:
    branches:
      - main


permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_docker_password: ${{ secrets.TF_VAR_docker_password }}
          TF_VAR_allowed_ssh_ip: ${{ secrets.TF_VAR_allowed_ssh_ip }}


      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check


      - name: Terraform Validate
        id: validate
        run: terraform validate


      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        working-directory: ./terraform
        run: terraform plan -no-color -out=tfplan
        env:
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_docker_password: ${{ secrets.TF_VAR_docker_password }}
          TF_VAR_allowed_ssh_ip: ${{ secrets.TF_VAR_allowed_ssh_ip }}

      - name: Update Pull Request with Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“–\`\n\n<details><summary>Show Plan</summary>\n\n\`\`\`\n${process.env.PLAN}\n\`\`\`\n\n</details>`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: output
            })


      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_docker_password: ${{ secrets.TF_VAR_docker_password }}
          TF_VAR_allowed_ssh_ip: ${{ secrets.TF_VAR_allowed_ssh_ip }}